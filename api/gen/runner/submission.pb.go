// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: runner/submission.proto

package runner

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubmissionStatusUpdate_Status int32

const (
	SubmissionStatusUpdate_PENDING               SubmissionStatusUpdate_Status = 0
	SubmissionStatusUpdate_RUNNING               SubmissionStatusUpdate_Status = 1
	SubmissionStatusUpdate_ACCEPTED              SubmissionStatusUpdate_Status = 2
	SubmissionStatusUpdate_WRONG_ANSWER          SubmissionStatusUpdate_Status = 3
	SubmissionStatusUpdate_TIME_LIMIT_EXCEEDED   SubmissionStatusUpdate_Status = 4
	SubmissionStatusUpdate_MEMORY_LIMIT_EXCEEDED SubmissionStatusUpdate_Status = 5
	SubmissionStatusUpdate_RUNTIME_ERROR         SubmissionStatusUpdate_Status = 6
	SubmissionStatusUpdate_COMPILATION_ERROR     SubmissionStatusUpdate_Status = 7
	SubmissionStatusUpdate_INTERNAL_ERROR        SubmissionStatusUpdate_Status = 8
)

// Enum value maps for SubmissionStatusUpdate_Status.
var (
	SubmissionStatusUpdate_Status_name = map[int32]string{
		0: "PENDING",
		1: "RUNNING",
		2: "ACCEPTED",
		3: "WRONG_ANSWER",
		4: "TIME_LIMIT_EXCEEDED",
		5: "MEMORY_LIMIT_EXCEEDED",
		6: "RUNTIME_ERROR",
		7: "COMPILATION_ERROR",
		8: "INTERNAL_ERROR",
	}
	SubmissionStatusUpdate_Status_value = map[string]int32{
		"PENDING":               0,
		"RUNNING":               1,
		"ACCEPTED":              2,
		"WRONG_ANSWER":          3,
		"TIME_LIMIT_EXCEEDED":   4,
		"MEMORY_LIMIT_EXCEEDED": 5,
		"RUNTIME_ERROR":         6,
		"COMPILATION_ERROR":     7,
		"INTERNAL_ERROR":        8,
	}
)

func (x SubmissionStatusUpdate_Status) Enum() *SubmissionStatusUpdate_Status {
	p := new(SubmissionStatusUpdate_Status)
	*p = x
	return p
}

func (x SubmissionStatusUpdate_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubmissionStatusUpdate_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_runner_submission_proto_enumTypes[0].Descriptor()
}

func (SubmissionStatusUpdate_Status) Type() protoreflect.EnumType {
	return &file_runner_submission_proto_enumTypes[0]
}

func (x SubmissionStatusUpdate_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubmissionStatusUpdate_Status.Descriptor instead.
func (SubmissionStatusUpdate_Status) EnumDescriptor() ([]byte, []int) {
	return file_runner_submission_proto_rawDescGZIP(), []int{1, 0}
}

type SubmissionRequest struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	SubmissionId  string                        `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	Code          string                        `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	TimeLimitMs   int64                         `protobuf:"varint,3,opt,name=time_limit_ms,json=timeLimitMs,proto3" json:"time_limit_ms,omitempty"`
	MemoryLimitKb int64                         `protobuf:"varint,4,opt,name=memory_limit_kb,json=memoryLimitKb,proto3" json:"memory_limit_kb,omitempty"`
	TestCases     []*SubmissionRequest_TestCase `protobuf:"bytes,5,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmissionRequest) Reset() {
	*x = SubmissionRequest{}
	mi := &file_runner_submission_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionRequest) ProtoMessage() {}

func (x *SubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_submission_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionRequest.ProtoReflect.Descriptor instead.
func (*SubmissionRequest) Descriptor() ([]byte, []int) {
	return file_runner_submission_proto_rawDescGZIP(), []int{0}
}

func (x *SubmissionRequest) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *SubmissionRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SubmissionRequest) GetTimeLimitMs() int64 {
	if x != nil {
		return x.TimeLimitMs
	}
	return 0
}

func (x *SubmissionRequest) GetMemoryLimitKb() int64 {
	if x != nil {
		return x.MemoryLimitKb
	}
	return 0
}

func (x *SubmissionRequest) GetTestCases() []*SubmissionRequest_TestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

type SubmissionStatusUpdate struct {
	state          protoimpl.MessageState        `protogen:"open.v1"`
	SubmissionId   string                        `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	Status         SubmissionStatusUpdate_Status `protobuf:"varint,2,opt,name=status,proto3,enum=gojudge.SubmissionStatusUpdate_Status" json:"status,omitempty"`
	StatusMessage  string                        `protobuf:"bytes,6,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	TestsCompleted int32                         `protobuf:"varint,3,opt,name=tests_completed,json=testsCompleted,proto3" json:"tests_completed,omitempty"`
	TotalTests     int32                         `protobuf:"varint,4,opt,name=total_tests,json=totalTests,proto3" json:"total_tests,omitempty"`
	MaxTimeSpentMs int64                         `protobuf:"varint,5,opt,name=max_time_spent_ms,json=maxTimeSpentMs,proto3" json:"max_time_spent_ms,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubmissionStatusUpdate) Reset() {
	*x = SubmissionStatusUpdate{}
	mi := &file_runner_submission_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmissionStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionStatusUpdate) ProtoMessage() {}

func (x *SubmissionStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_runner_submission_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionStatusUpdate.ProtoReflect.Descriptor instead.
func (*SubmissionStatusUpdate) Descriptor() ([]byte, []int) {
	return file_runner_submission_proto_rawDescGZIP(), []int{1}
}

func (x *SubmissionStatusUpdate) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *SubmissionStatusUpdate) GetStatus() SubmissionStatusUpdate_Status {
	if x != nil {
		return x.Status
	}
	return SubmissionStatusUpdate_PENDING
}

func (x *SubmissionStatusUpdate) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *SubmissionStatusUpdate) GetTestsCompleted() int32 {
	if x != nil {
		return x.TestsCompleted
	}
	return 0
}

func (x *SubmissionStatusUpdate) GetTotalTests() int32 {
	if x != nil {
		return x.TotalTests
	}
	return 0
}

func (x *SubmissionStatusUpdate) GetMaxTimeSpentMs() int64 {
	if x != nil {
		return x.MaxTimeSpentMs
	}
	return 0
}

type SubmissionRequest_TestCase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         string                 `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output        string                 `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmissionRequest_TestCase) Reset() {
	*x = SubmissionRequest_TestCase{}
	mi := &file_runner_submission_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmissionRequest_TestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionRequest_TestCase) ProtoMessage() {}

func (x *SubmissionRequest_TestCase) ProtoReflect() protoreflect.Message {
	mi := &file_runner_submission_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionRequest_TestCase.ProtoReflect.Descriptor instead.
func (*SubmissionRequest_TestCase) Descriptor() ([]byte, []int) {
	return file_runner_submission_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SubmissionRequest_TestCase) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *SubmissionRequest_TestCase) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

var File_runner_submission_proto protoreflect.FileDescriptor

const file_runner_submission_proto_rawDesc = "" +
	"\n" +
	"\x17runner/submission.proto\x12\agojudge\"\x96\x02\n" +
	"\x11SubmissionRequest\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\"\n" +
	"\rtime_limit_ms\x18\x03 \x01(\x03R\vtimeLimitMs\x12&\n" +
	"\x0fmemory_limit_kb\x18\x04 \x01(\x03R\rmemoryLimitKb\x12B\n" +
	"\n" +
	"test_cases\x18\x05 \x03(\v2#.gojudge.SubmissionRequest.TestCaseR\ttestCases\x1a8\n" +
	"\bTestCase\x12\x14\n" +
	"\x05input\x18\x01 \x01(\tR\x05input\x12\x16\n" +
	"\x06output\x18\x02 \x01(\tR\x06output\"\xd0\x03\n" +
	"\x16SubmissionStatusUpdate\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\x12>\n" +
	"\x06status\x18\x02 \x01(\x0e2&.gojudge.SubmissionStatusUpdate.StatusR\x06status\x12%\n" +
	"\x0estatus_message\x18\x06 \x01(\tR\rstatusMessage\x12'\n" +
	"\x0ftests_completed\x18\x03 \x01(\x05R\x0etestsCompleted\x12\x1f\n" +
	"\vtotal_tests\x18\x04 \x01(\x05R\n" +
	"totalTests\x12)\n" +
	"\x11max_time_spent_ms\x18\x05 \x01(\x03R\x0emaxTimeSpentMs\"\xb4\x01\n" +
	"\x06Status\x12\v\n" +
	"\aPENDING\x10\x00\x12\v\n" +
	"\aRUNNING\x10\x01\x12\f\n" +
	"\bACCEPTED\x10\x02\x12\x10\n" +
	"\fWRONG_ANSWER\x10\x03\x12\x17\n" +
	"\x13TIME_LIMIT_EXCEEDED\x10\x04\x12\x19\n" +
	"\x15MEMORY_LIMIT_EXCEEDED\x10\x05\x12\x11\n" +
	"\rRUNTIME_ERROR\x10\x06\x12\x15\n" +
	"\x11COMPILATION_ERROR\x10\a\x12\x12\n" +
	"\x0eINTERNAL_ERROR\x10\b2^\n" +
	"\x06Runner\x12T\n" +
	"\x11ExecuteSubmission\x12\x1a.gojudge.SubmissionRequest\x1a\x1f.gojudge.SubmissionStatusUpdate\"\x000\x01B\x97\x01\n" +
	"\vcom.gojudgeB\x0fSubmissionProtoP\x01Z;github.com/computer-technology-team/go-judge/api/gen/runner\xa2\x02\x03GXX\xaa\x02\aGojudge\xca\x02\aGojudge\xe2\x02\x13Gojudge\\GPBMetadata\xea\x02\aGojudgeb\x06proto3"

var (
	file_runner_submission_proto_rawDescOnce sync.Once
	file_runner_submission_proto_rawDescData []byte
)

func file_runner_submission_proto_rawDescGZIP() []byte {
	file_runner_submission_proto_rawDescOnce.Do(func() {
		file_runner_submission_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_runner_submission_proto_rawDesc), len(file_runner_submission_proto_rawDesc)))
	})
	return file_runner_submission_proto_rawDescData
}

var file_runner_submission_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_runner_submission_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_runner_submission_proto_goTypes = []any{
	(SubmissionStatusUpdate_Status)(0), // 0: gojudge.SubmissionStatusUpdate.Status
	(*SubmissionRequest)(nil),          // 1: gojudge.SubmissionRequest
	(*SubmissionStatusUpdate)(nil),     // 2: gojudge.SubmissionStatusUpdate
	(*SubmissionRequest_TestCase)(nil), // 3: gojudge.SubmissionRequest.TestCase
}
var file_runner_submission_proto_depIdxs = []int32{
	3, // 0: gojudge.SubmissionRequest.test_cases:type_name -> gojudge.SubmissionRequest.TestCase
	0, // 1: gojudge.SubmissionStatusUpdate.status:type_name -> gojudge.SubmissionStatusUpdate.Status
	1, // 2: gojudge.Runner.ExecuteSubmission:input_type -> gojudge.SubmissionRequest
	2, // 3: gojudge.Runner.ExecuteSubmission:output_type -> gojudge.SubmissionStatusUpdate
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_runner_submission_proto_init() }
func file_runner_submission_proto_init() {
	if File_runner_submission_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_runner_submission_proto_rawDesc), len(file_runner_submission_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_runner_submission_proto_goTypes,
		DependencyIndexes: file_runner_submission_proto_depIdxs,
		EnumInfos:         file_runner_submission_proto_enumTypes,
		MessageInfos:      file_runner_submission_proto_msgTypes,
	}.Build()
	File_runner_submission_proto = out.File
	file_runner_submission_proto_goTypes = nil
	file_runner_submission_proto_depIdxs = nil
}
