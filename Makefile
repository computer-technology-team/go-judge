SQLC_VERSION := v1.28.0
MIGRATE_VERSION := v4.17.0
BUF_VERSION := 1.15.1


.PHONY: build
build:
	go build -o go-judge

.PHONY: clean
clean:
	find . -type f -name "*.go"  -exec grep -qE "// Code generated by .*\. DO NOT EDIT\." {} \; -delete

generate:  clean gen-sqlc gen-go gen-proto
	@go mod tidy

gen-go:
	@go generate ./...

gen-sqlc: check-sqlc
	@sqlc generate -f ./configs/sqlc.yaml

gen-proto: check-buf
	@buf generate

check-sqlc:
	@if ! command -v sqlc ; then \
		echo "sqlc could not be found"; \
		echo "Installing sqlc $(SQLC_VERSION)"; \
		go install github.com/sqlc-dev/sqlc/cmd/sqlc@$(SQLC_VERSION); \
	elif ! sqlc version 2> /dev/null | grep -q $(SQLC_VERSION); then \
		echo "Incorrect version of sqlc found"; \
		echo "Installing sqlc $(SQLC_VERSION)"; \
		go install github.com/sqlc-dev/sqlc/cmd/sqlc@$(SQLC_VERSION); \
	else \
		echo "Required sqlc version $(SQLC_VERSION) is already installed"; \
	fi

check-migrate:
	@if ! command -v migrate ; then \
		echo "migrate could not be found"; \
		echo "Installing migrate $(MIGRATE_VERSION)"; \
		go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@$(MIGRATE_VERSION); \
	else \
		echo "migrate is already installed"; \
	fi

check-buf:
	@if ! command -v buf ; then \
		echo "buf could not be found"; \
		echo "Installing buf $(BUF_VERSION)"; \
		go install github.com/bufbuild/buf/cmd/buf@v$(BUF_VERSION); \
	elif ! buf --version 2> /dev/null | grep -q $(BUF_VERSION); then \
		echo "Incorrect version of buf found"; \
		echo "Installing buf $(BUF_VERSION)"; \
		go install github.com/bufbuild/buf/cmd/buf@v$(BUF_VERSION); \
	else \
		echo "Required buf version $(BUF_VERSION) is already installed"; \
	fi

.PHONY: migration
migration: check-migrate
	@if [ -z "$(name)" ]; then \
		echo "Must enter migration name e.g. make migration name=migration_name"; \
		exit 1; \
	fi; \
	migrate create -digits 3 -ext sql -dir internal/storage/migrations -seq $(name)

.PHONY: create-migration
create-migration: check-migrate
	@./scripts/create_migration.sh
